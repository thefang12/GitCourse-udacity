What happens when you initialize a repository? Why do you need to do it?
  It makes a folder into a repository and its needed to keep track of
  the changes in the folder's files

How is the staging area different from the working directory and the repository?
What value do you think it offers?
  the staging area allows you to decide what will be committed to the repository,
   the working directory shows the current folder and files and the repo is the
   history of commits. It allows you to pick and choose which files to commit
   in order to divide each commit for each logical change

How can you use the staging area to make sure you have one commit per logical
change?
  by using the git diff and git diff --staged and keeping in mind not to bunch too much work together

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
  Whenever you are making a change to a project that will introduce a new experimental feature.
  When you add a new behavior to a game, when you are trying to add functionality to a webpage, etc.
  They would keep those changes encapsulated so not to disturb the core functionality of the project.

How do the diagrams help you visualize the branch structure?
  They allow me to see where is each branch and how far away it is from the current master
  branch along with visualizing where am I when checking out commits

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
  it combine every commit made in the two branches sorting them by timestamp.
   We represent it like so to know they where a separate branch before

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
  Pros:
  automatic merging saves time
  Cons:
  It might create conflicts when it's unable to identify which version is the best
